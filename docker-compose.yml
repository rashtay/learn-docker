# version is the version of docker compose
version: "3"
# services are docker containers you would want to run
services:
  postgres:
    image: "postgres:latest"
    restart: always
    environment:
      - POSTGRES_PASSWORD=postgres_password
    ports:
      - 5432:5432
  redis:
    image: "redis:latest"
  api:
    depends_on:
      - postgres
    build:
      context: ./server # root directory of the project
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules # keep using the node_modules inside docker container app
      - ./server:/app # current directory to container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PG_USER=postgres
      - PG_HOST=postgres
      - PG_DATABASE=postgres
      - PG_PASSWORD=postgres_password
      - PG_PORT=5432
  client:
    stdin_open: true # Add this else react crashes
    build:
      context: ./client # root directory of the project
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules # keep using the node_modules inside docker container app
      - ./client:/app # current directory to container
  worker:
    depends_on:
      - redis
    build:
      context: ./worker # root directory of the project
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules # keep using the node_modules inside docker container app
      - ./worker:/app # current directory to container
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  nginx:
    restart: always
    build:
      context: ./nginx # root directory of the project
      dockerfile: Dockerfile.dev
    ports:
      - "3050:80"
